#!/bin/bash

# Simplified color palette - only red and green for specific cases
GREEN='\033[0;32m'
RED='\033[1;31m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Store password for sudo commands
PASSWORD="dwemer"

# Helper function for section headers
print_header() {
    local title="$1"
    local branch=""
    
    # Check if second parameter (branch) is provided
    if [ ! -z "$2" ]; then
        branch=" ($2)"
    fi
    
    printf "\n${BOLD}-------------------------------------------------------${NC}\n"
    printf "${BOLD} %s%s ${NC}\n" "$title" "$branch"
    printf "${BOLD}-------------------------------------------------------${NC}\n"
}

# Helper function for completion messages
print_success() {
    printf "${GREEN}[SUCCESS] %s${NC}\n" "$1"
}

print_warning() {
    printf "${RED}[WARNING] %s${NC}\n" "$1"
}

# Main title
printf "\n${BOLD}=======================================================${NC}\n"
printf "${BOLD}          DWEMER DYNAMICS SYSTEM UPDATE                ${NC}\n"
printf "${BOLD}=======================================================${NC}\n\n"

# Server update
cd /var/www/html/HerikaServer
BRANCH=$(git branch --show-current)
print_header "UPDATING CHIM SERVER" "$BRANCH"

printf ">> Resetting repository...\n"
git reset --hard HEAD
printf ">> Pulling latest changes...\n"
git pull
# Set permissions for HerikaServer immediately after updating
echo $PASSWORD | sudo -S chown -R dwemer:www-data /var/www/html/HerikaServer
echo $PASSWORD | sudo -S chmod -R 775 /var/www/html/HerikaServer
printf "${GREEN}[SUCCESS] Server updated successfully${NC}\n"

# MiniMe update
cd /home/dwemer/minime-t5
BRANCH=$(git branch --show-current)
print_header "UPDATING MINI-ME & TXT2VEC" "$BRANCH"

printf ">> Resetting repository...\n"
git reset --hard HEAD
printf ">> Pulling latest changes...\n"
git pull

# Set permissions for minime-t5
sudo chown -R dwemer:dwemer /home/dwemer/minime-t5
sudo chmod -R 755 /home/dwemer/minime-t5
printf "${GREEN}[SUCCESS] MiniMe & TXT2VEC updated successfully${NC}\n"

# MeloTTS update
cd /home/dwemer/MeloTTS
BRANCH=$(git branch --show-current)
print_header "UPDATING MELO-TTS" "$BRANCH"

printf ">> Resetting repository...\n"
git reset --hard HEAD
printf ">> Pulling latest changes...\n"
git pull

# Set permissions for MeloTTS
sudo chown -R dwemer:dwemer /home/dwemer/MeloTTS
sudo chmod -R 755 /home/dwemer/MeloTTS
printf "${GREEN}[SUCCESS] MeloTTS updated successfully${NC}\n"

# LocalWhisper update
cd /home/dwemer/remote-faster-whisper
BRANCH=$(git branch --show-current)
print_header "UPDATING LOCALWHISPER" "$BRANCH"

# Check current remote URL
CURRENT_REMOTE=$(git config --get remote.origin.url)
TARGET_REMOTE="https://github.com/abeiro/remote-faster-whisper.git"

# Set the correct remote if needed
if [ "$CURRENT_REMOTE" != "$TARGET_REMOTE" ]; then
    print_warning "Setting remote to $TARGET_REMOTE"
    git remote set-url origin $TARGET_REMOTE
fi

printf ">> Resetting repository...\n"
git reset --hard HEAD
printf ">> Pulling latest changes...\n"
git pull

# Set permissions for LocalWhisper
sudo chown -R dwemer:dwemer /home/dwemer/remote-faster-whisper
sudo chmod -R 755 /home/dwemer/remote-faster-whisper
printf "${GREEN}[SUCCESS] LocalWhisper updated successfully${NC}\n"

# XTTSv2 server update
cd /home/dwemer/xtts-api-server
BRANCH=$(git branch --show-current)
print_header "UPDATING CHIM XTTS" "$BRANCH"

# Backup speakers folder if it exists
if [ -d "speakers" ]; then
    print_warning "Backing up speakers folder..."
    cp -r speakers speakers.backup
fi

printf ">> Resetting repository...\n"
git reset --hard HEAD
printf ">> Pulling latest changes...\n"
git pull

# Restore speakers folder if backup exists
if [ -d "speakers.backup" ]; then
    print_warning "Restoring speakers folder..."
    cp -r speakers.backup/* speakers/ 2>/dev/null || true
    rm -rf speakers.backup
fi

# Set permissions for XTTS
sudo chown -R dwemer:dwemer /home/dwemer/xtts-api-server
sudo chmod -R 755 /home/dwemer/xtts-api-server
printf "${GREEN}[SUCCESS] CHIM XTTS updated successfully${NC}\n"

# System permission updates
print_header "RUNNING SYSTEM PERMISSION UPDATES"

sudo /usr/local/bin/update_perms
printf "${GREEN}[SUCCESS] System permissions updated${NC}\n"

# Final message
printf "\n${BOLD}=======================================================${NC}\n"
printf "${BOLD}${GREEN}                ALL UPDATES COMPLETED!               ${NC}\n"
printf "${BOLD}=======================================================${NC}\n\n"
